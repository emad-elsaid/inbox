#!/usr/bin/env ruby
require 'bundler'
Bundler.require(:default)

require 'sinatra/base'
require 'webrick'
require 'webrick/https'
require 'openssl'
require 'json'

CERT_PATH = File.expand_path(Dir.pwd)

webrick_options = {
  Port: 3000,
  BindAddress: '0.0.0.0',
  Logger: WEBrick::Log::new($stderr, WEBrick::Log::DEBUG),
  SSLEnable: true,
  SSLVerifyClient: OpenSSL::SSL::VERIFY_NONE,
  SSLCertificate: OpenSSL::X509::Certificate.new(File.open(File.join(CERT_PATH, 'server.crt')).read),
  SSLPrivateKey: OpenSSL::PKey::RSA.new(File.open(File.join(CERT_PATH, 'server.key')).read),
  SSLCertName: [['CN', WEBrick::Utils::getservername]]
}

MESSAGES = {
  sender: [],
  receiver: []
}.freeze

class Camera < Sinatra::Base
  get '/send' do
    erb :send
  end

  get '/receive' do
    erb :receive
  end

  post '/from/receiver' do
    body = request.body.read
    MESSAGES[:sender].push(body)
  end

  get '/inbox/receiver' do
    MESSAGES[:receiver].pop
  end

  post '/from/sender' do
    body = request.body.read
    MESSAGES[:receiver].push(body)
  end

  get '/inbox/sender' do
    MESSAGES[:sender].pop
  end
end

Rack::Handler::WEBrick.run Camera, **webrick_options
